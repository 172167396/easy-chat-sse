<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easychat.sse.dao.UserMapper">
    <sql id="column">
            ${u}.id,
            ${u}.name,
            ${u}.account,
            ${u}.password,
            ${u}.gender,
            ${u}.address,
            ${u}.avatar_id,
            ${u}.mobile,
            ${u}.avatar_path
    </sql>

    <insert id="save">
        insert into sys_user (<include refid="column"><property name="u" value="sys_user"/></include>)
        values (#{id},
                #{name},
                #{account},
                #{password},
                #{gender},
                #{address},
                #{avatarId},
                #{mobile},
                #{avatarPath})
    </insert>

    <insert id="initUserGroup">
        insert into sys_friend_group(id,name,create_user,create_time) values(#{id},#{name},#{createUser},#{createTime})
    </insert>

    <select id="getUserByAccount" resultType="com.easychat.sse.model.entity.UserEntity">
        select <include refid="column"><property name="u" value="u"/></include> from sys_user u where account = #{value}
    </select>
    <select id="getUserGroups" resultType="com.easychat.sse.model.dto.IdTitle">
        select id,name title from sys_friend_group where create_user = #{value}
    </select>

    <select id="searchUser" resultType="com.easychat.sse.model.dto.SimpleUser">
        select u.id,u.name,u.account,u.gender,u.avatar_path from sys_user u
        where u.account = #{value} or u.name = #{value}
    </select>

    <select id="getById" resultType="com.easychat.sse.model.entity.UserEntity">
        select <include refid="column"><property name="u" value="u"/></include> from sys_user u where id = #{value}
    </select>

    <select id="getSimpleUserInfo" resultType="com.easychat.sse.model.dto.SimpleUser">
        select u.id,u.name,u.account,u.gender,u.avatar_path from sys_user u
        where u.id = #{value}
    </select>

    <select id="queryUserGroup" resultType="com.easychat.sse.model.dto.IdName">
        select id,name from sys_friend_group where create_user = #{value}
    </select>

    <select id="getUserDomainByAccount" resultType="com.easychat.sse.model.domain.UserDomain">
        select <include refid="column"><property name="u" value="u"/></include> from sys_user u
        where u.account = #{value}
    </select>

    <select id="findMyFriends" resultType="com.easychat.sse.model.dto.SimpleFriendDTO">
        SELECT
        ur.id,
        ur.friend_id userId,
        g.id group_id,
        ur.remark_name,
        u.`name`,
        u.`avatar_path`,
        g.`name` groupName
        FROM
        `sys_friend_group` g
        LEFT JOIN sys_user_relations ur on g.id = ur.group_id
        LEFT JOIN sys_user u ON ur.friend_id = u.id
        WHERE
        g.create_user = #{userId}
        <if test="groupId != null and groupId !=''">
            and ur.group_id = #{groupId}
        </if>
        order by g.create_time
    </select>

    <select id="getFirstGroupId" resultType="java.lang.String">
        SELECT
            id
        FROM
            sys_friend_group
        WHERE
            create_user = #{value}
        ORDER BY
            create_time DESC
            LIMIT 1
    </select>

</mapper>
